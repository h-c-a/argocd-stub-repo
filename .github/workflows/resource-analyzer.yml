name: Resource Analyzer

on:
  workflow_dispatch:
    inputs:
      strategy:
        description: 'Resource recommendation strategy'
        type: choice
        options:
          - basic
          - time_aware
          - trend_aware
          - workload_aware
          - quantile_regression
          - moving_average
          - prophet
          - ensemble
        default: 'ensemble'
        required: true
      history_window:
        description: 'Historical data window (e.g., 24h, 7d, 8w, 1yr)'
        type: string
        default: '24h'
        required: true
      cpu_percentile:
        description: 'CPU percentile for recommendations'
        type: number
        default: 95.0
        required: true
      memory_buffer:
        description: 'Memory buffer multiplier (e.g., 1.15 for 15% buffer)'
        type: number
        default: 1.15
        required: true
      business_hours_start:
        description: 'Business hours start (0-23)'
        type: number
        default: 9
        required: false
      business_hours_end:
        description: 'Business hours end (0-23)'
        type: number
        default: 17
        required: false
      business_days:
        description: 'Business days (comma-separated, 0=Monday, 6=Sunday)'
        type: string
        default: '0,1,2,3,4'
        required: false
      trend_threshold:
        description: 'Trend threshold'
        type: number
        default: 0.1
        required: false
      high_variance_threshold:
        description: 'High variance threshold'
        type: number
        default: 0.5
        required: false
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  analyze-resources:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Wait for Docker
        run: |
          echo "‚è≥ Waiting for Docker daemon to start..."
          echo "$(docker context ls --format json | jq -r 'select(.Current == true) | .DockerEndpoint' | sed 's!^unix://!!')"
          for i in {1..10}; do
            if docker info >/dev/null 2>&1; then
              echo "‚úÖ Docker is ready!"
              break
            fi
            echo "üöß Docker not ready yet, retrying... (Attempt $i/10)"
            sleep 2
            if [ "$i" -eq 10 ]; then
              echo "‚ùå Docker failed to start within the expected time."
              exit 1
            fi
          done
      
      - name: Run resource analyzer
        run: |
          echo "Starting container..."
          docker run \
            --network=host \
            -v /var/run/docker.sock:/var/run/docker.sock \
            ubuntu:24.04 \
            sh -c '
              echo "‚è≥ Waiting for Docker daemon to start..."
              for i in {1..10}; do
                if docker info >/dev/null 2>&1; then
                  echo "‚úÖ Docker is ready!"
                  break
                fi
                echo "üöß Docker not ready yet, retrying... (Attempt $i/10)"
                sleep 2
                if [ "$i" -eq 10 ]; then
                  echo "‚ùå Docker failed to start within the expected time."
                  exit 1
                fi
              done
            '

      - name: Upload recommendations
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: recommendations
          path: TEMP/recommendations.json 