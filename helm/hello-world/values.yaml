apiVersion: apps/v1
kind: Deployment
metadata:
  name: stress-ng-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stress-ng
  template:
    metadata:
      labels:
        app: stress-ng
    spec:
      containers:
        - name: stress-ng
          image: polinux/stress-ng
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            - |
              while true; do
                cpu_workers=$((RANDOM % 4 + 1))  # Random number of CPU workers (1-4)
                io_workers=$((RANDOM % 3 + 1))   # Random number of I/O workers (1-3)
                vm_workers=$((RANDOM % 2 + 1))   # Random number of VM workers (1-2)
                cpu_load=$((RANDOM % 100))       # Random CPU load (0-100)
                timeout=$((RANDOM % 10 + 5))     # Random timeout (5-15 seconds)
                fork_workers=$((RANDOM % 5 + 1)) # Random number of fork workers (1-5)
                vm_bytes=$((RANDOM % 512 + 128))M # Random VM memory (128M - 512M)

                # Run the stress-ng command with random parameters
                stress-ng --cpu $cpu_workers \
                          --cpu-load $cpu_load \
                          --io $io_workers \
                          --vm $vm_workers \
                          --vm-bytes $vm_bytes \
                          --fork $fork_workers \
                          --timeout ${timeout}s \
                          --aggressive \
                          --metrics-brief

                sleep $((RANDOM % 5 + 1))  # Random sleep time between 1 to 5 seconds
              done
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi

      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: stress-ng-service
  namespace: default
spec:
  selector:
    app: stress-ng
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
